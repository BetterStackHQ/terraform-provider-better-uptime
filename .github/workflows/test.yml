name: Test
on:
  push:
    branches:
      - master
  pull_request:
jobs:
  test:
    strategy:
      matrix:
        go-version: [1.16.x]
        os: [ubuntu-latest, macos-latest, windows-latest]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go-version }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Test
      run: go test ./...

  e2e_test:
    concurrency:
      group: e2e
    strategy:
      matrix:
        go-version: [1.16.x]
        terraform-version: [0.13, 1.8.5]
        config: [examples/basic, examples/advanced, examples/on_call_calendars]
        os: [ubuntu-latest]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}
      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ matrix.terraform-version }}
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Add resources via Terraform
        run: make terraform CONFIGURATION="${{ matrix.config }}" ARGS="apply --auto-approve"
        env:
          BETTERUPTIME_API_TOKEN: ${{ secrets.UPTIME_E2E_TEAM_TOKEN }}
      - name: Plan resources via Terraform - must be empty
        run: make terraform CONFIGURATION="${{ matrix.config }}" ARGS="plan --detailed-exitcode"
        env:
          BETTERUPTIME_API_TOKEN: ${{ secrets.UPTIME_E2E_TEAM_TOKEN }}
      - name: Destroy resources via Terraform
        if: always()
        run: make terraform CONFIGURATION="${{ matrix.config }}" ARGS="destroy --auto-approve"
        env:
          BETTERUPTIME_API_TOKEN: ${{ secrets.UPTIME_E2E_TEAM_TOKEN }}
